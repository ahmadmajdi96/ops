name: Deploy FastAPI to Docker Swarm

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: ${{ github.event.repository.name }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, prod]
    steps:
      - uses: actions/checkout@v4

      - name: Configure Docker for insecure registry
        run: |
          echo '{"insecure-registries": ["157.180.69.112:5000"]}' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker
          sleep 5

      - name: Build and push Docker image
        run: |
          # Build images
          docker build -t 157.180.69.112:5000/${{ env.IMAGE_NAME }}:${{ matrix.environment }}-${{ github.sha }} .
          docker tag 157.180.69.112:5000/${{ env.IMAGE_NAME }}:${{ matrix.environment }}-${{ github.sha }} 157.180.69.112:5000/${{ env.IMAGE_NAME }}:${{ matrix.environment }}-latest

          # Push images
          docker push 157.180.69.112:5000/${{ env.IMAGE_NAME }}:${{ matrix.environment }}-${{ github.sha }}
          docker push 157.180.69.112:5000/${{ env.IMAGE_NAME }}:${{ matrix.environment }}-latest

          echo "âœ… Images pushed successfully"

  deploy-dev:
    if: github.ref == 'refs/heads/develop'
    needs: [test, build-and-push]
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Deploy to Development
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SWARM_HOST }}
          username: root
          key: ${{ secrets.SWARM_SSH_KEY }}
          script: |
            cd /opt/swarm/apps/${{ env.IMAGE_NAME }}
            ./deploy.sh dev ${{ github.sha }}

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    needs: [test, build-and-push]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SWARM_HOST }}
          username: root
          key: ${{ secrets.SWARM_SSH_KEY }}
          script: |
            cd /opt/swarm/apps/${{ env.IMAGE_NAME }}
            ./deploy.sh prod ${{ github.sha }}